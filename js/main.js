// Modal
function mostrarModal() {
  const modal = document.getElementById('modal');
  modal.classList.remove('hidden');
}

function cerrarModal() {
  const modal = document.getElementById('modal');
  modal.classList.add('hidden');
}

// Traducci√≥n con data-es / data-en
let currentLang = 'es';

function cambiarIdioma(lang) {
  document.querySelectorAll('[data-es]').forEach(el => {
    el.textContent = (lang === 'es') ? el.getAttribute('data-es') : el.getAttribute('data-en');
  });
}

// Bot√≥n de traducci√≥n principal (desktop)
document.addEventListener('DOMContentLoaded', function() {
  const translateBtn = document.getElementById('translateBtn');
  if (translateBtn) {
    translateBtn.addEventListener('click', () => {
      currentLang = (currentLang === 'es') ? 'en' : 'es';
      cambiarIdioma(currentLang);
      translateBtn.textContent = (currentLang === 'es') ? 'EN' : 'ES';
      fraseAleatoriaCAdo(); // actualizar frase al cambiar idioma
    });
  }

  // Bot√≥n de traducci√≥n m√≥vil
  const translateBtnMobile = document.getElementById("translateBtnMobile");
  if (translateBtnMobile) {
    translateBtnMobile.addEventListener("click", () => {
      currentLang = (currentLang === "es") ? "en" : "es";
      cambiarIdioma(currentLang);
      translateBtnMobile.textContent = (currentLang === "es") ? "EN" : "ES";
      fraseAleatoriaCAdo(); // actualizar frase al cambiar idioma
    });
  }

  // Men√∫ hamburguesa
const menuToggle = document.getElementById("menuToggle");
const mainNav = document.querySelector("nav.main-nav");

menuToggle.addEventListener("click", () => {
  mainNav.classList.toggle("show");
});



  // Inicializar con espa√±ol
  cambiarIdioma('es');
  
  // Inicializar AOS
  if (typeof AOS !== 'undefined') {
    AOS.init();
  }
});

// Formulario de consultas con WhatsApp
function mostrarConfirmacion(event) {
  event.preventDefault();

  const nombre = document.getElementById("nombre").value;
  const apellido = document.getElementById("apellido").value;
  const persona = document.querySelector('input[name="persona"]:checked').value;

  let numeroWhatsApp = "";

  if (persona === "Guada") numeroWhatsApp = "5492304309043";
  if (persona === "Bianca") numeroWhatsApp = "5491122842085";
  if (persona === "Gaston") numeroWhatsApp = "5491159625690";
  if (persona === "Lautaro") numeroWhatsApp = "5491126544906";
  if (persona === "Male") numeroWhatsApp = "5491162165178";

  const mensaje = `‚úÖ Hola ${nombre} ${apellido}, tu mensaje fue recibido por CAdo. Te contactar√° ${persona}.`;
  const divConfirmacion = document.getElementById("confirmacion");
  divConfirmacion.innerHTML = mensaje;
  divConfirmacion.style.display = 'block';

  const texto = `Hola acabo de completar el formulario de consulta de CAdo y me gustaria mucho que me brindes mas informacion , *Mi nombre es ${nombre} ${apellido}.*`;
  const url = `https://wa.me/${numeroWhatsApp}?text=${encodeURIComponent(texto)}`;
  window.open(url, '_blank');
}

// Mostrar formulario cuando el usuario presione el bot√≥n de seleccionar emoci√≥n
const toggleFormBtn = document.getElementById("toggleFormBtn");
if (toggleFormBtn) {
  toggleFormBtn.addEventListener("click", function () {
    document.getElementById("emotionFormModal").classList.toggle("hidden");
  });
}

// Guardar la emoci√≥n seleccionada y recargar la p√°gina
const personalizationForm = document.getElementById("personalization-form");
if (personalizationForm) {
  personalizationForm.addEventListener("submit", function (event) {
    event.preventDefault();

    const emotion = document.getElementById("emotion").value;
    if (emotion) {
      // Registrar emoci√≥n en localStorage (si existe la funci√≥n)
      if (typeof registrarEmocionUsuario === 'function') {
        registrarEmocionUsuario(emotion);
      }
      localStorage.setItem("emotion", emotion);
      localStorage.setItem("mostrarFrase", "true");
      location.reload();
    }
  });
}

// Aplicar emoci√≥n y cambiar el color de fondo
function applyEmotionTheme(emotion) {
  const emotionClasses = ["alegria", "furia", "tristeza", "miedo", "verguenza", "normal"];
  document.body.classList.remove(...emotionClasses);
  if (emotion && emotion !== "normal") {
    document.body.classList.add(emotion);
  }
}

// Consultar la emoci√≥n guardada y aplicarla
const storedEmotion = localStorage.getItem("emotion");
if (storedEmotion) {
  applyEmotionTheme(storedEmotion);

  const mostrarFrase = localStorage.getItem("mostrarFrase");
  if (mostrarFrase === "true") {
    mostrarFraseEmocion(storedEmotion);
    localStorage.removeItem("mostrarFrase");
  }
}

// Frases explicativas por emoci√≥n
function mostrarFraseEmocion(emocion) {
  const frasesEmociones = {
    alegria: "La alegr√≠a nos conecta con lo que amamos. ¬°Est√° perfecto disfrutarla!",
    tristeza: "La tristeza es parte del proceso de sanar. Permit√≠rtela es un acto de amor propio.",
    furia: "La furia aparece cuando algo duele o importa. Escucharla es entenderte mejor.",
    miedo: "El miedo te protege. Escucharlo es cuidar de vos mismo/a.",
    verguenza: "La verg√ºenza muestra que te importa lo que piensan los dem√°s, y eso es humano.",
    normal: "Sentirse normal tambi√©n est√° bien. Todo cambia y eso tambi√©n es parte del crecer."
  };

  const frase = frasesEmociones[emocion];
  if (!frase) return;

  const fraseDiv = document.createElement("div");
  fraseDiv.className = "frase-emocion";
  fraseDiv.innerHTML = `
    <span>${frase}</span>
    <button onclick="this.parentElement.remove()">‚úï</button>
  `;
  document.body.appendChild(fraseDiv);
}

// Frases para el logo (ES + EN)
const frasesCadoES = [
  "Creciendo con vos.",
  "Tu historia importa.",
  "Sentir est√° bien.",
  "Cada emoci√≥n cuenta.",
  "Explor√° qui√©n sos.",
  "No est√°s solo/a.",
  "Todo cambio vale.",
  "Acompa√±√°ndote siempre.",
  "Ser vos est√° perfecto.",
  "Lo que sent√≠s, importa.",
  "Lo que haces,es tu historia .",
  "No hay emociones buenas o malas.",
  "Crecer tambi√©n es equivocarse.",
  "Est√°s Creciendo ",
  "Tu proceso es √∫nico y v√°lido.",
  "Abr√≠ tu mente, cuid√° tu coraz√≥n.",
  "Sentir diferente tambi√©n es sentir.",
  "Tu voz merece ser escuchada.",
  "Aceptarte es un acto de valent√≠a.",
  "Sos m√°s fuerte de lo que cre√©s.",
  "Permitite descubrirte.",
  "Cada paso que das vale."
];

const frasesCadoEN = [
  "Growing with you.",
  "Your story matters.",
  "Feeling is okay.",
  "Every emotion counts.",
  "Explore who you are.",
  "You're not alone.",
  "Every change matters.",
  "Always here for you.",
  "Being yourself is perfect.",
  "What you feel matters.",
  "What you live builds your story.",
  "There are no good or bad emotions.",
  "Growing includes mistakes.",
  "You're learning, and that's okay.",
  "Your process is unique and valid.",
  "Open your mind, care for your heart.",
  "Feeling different is still feeling.",
  "Your voice deserves to be heard.",
  "Accepting yourself is brave.",
  "You're stronger than you think.",
  "You're not broken, you're growing.",
  "Let yourself discover who you are.",
  "Adolescence isn't confusion, it's exploration.",
  "Not knowing who you are is part of it too.",
  "Every step you take matters."
];

let fraseAnterior = null;

function fraseAleatoriaCAdo() {
  const spanFrase = document.getElementById("fraseCado");
  if (!spanFrase) return;

  const lang = currentLang || 'es';
  const frases = (lang === 'en') ? frasesCadoEN : frasesCadoES;

  let nuevaFrase;
  do {
    nuevaFrase = frases[Math.floor(Math.random() * frases.length)];
  } while (nuevaFrase === fraseAnterior);

  fraseAnterior = nuevaFrase;

  spanFrase.classList.add("fade-out");
  setTimeout(() => {
    spanFrase.textContent = nuevaFrase;
    spanFrase.classList.remove("fade-out");
  }, 800);
}

window.addEventListener("DOMContentLoaded", () => {
  fraseAleatoriaCAdo();
  setInterval(fraseAleatoriaCAdo, 60 * 1000); // cada 1 minuto
});

// === Registro de emociones en historial por usuario ===
function registrarEmocionUsuario(emocion) {
  const sesion = localStorage.getItem('sesionActual');
  if (!sesion) return;
  const usuarios = JSON.parse(localStorage.getItem('usuarios') || '{}');
  if (!usuarios[sesion]) usuarios[sesion] = { perfil:{alias: sesion}, historial: [] };
  usuarios[sesion].historial.push({
    fecha: new Date().toLocaleDateString(),
    hora: new Date().toLocaleTimeString(),
    emocion: emocion
  });
  localStorage.setItem('usuarios', JSON.stringify(usuarios));
}

// Carrusel
let indiceCarrusel = 0;

function moverCarrusel(direccion) {
  const carrusel = document.getElementById("carrusel");
  if (!carrusel) return;
  
  const imagenes = carrusel.querySelectorAll("img");
  const total = imagenes.length;

  indiceCarrusel = (indiceCarrusel + direccion + total) % total;
  carrusel.style.transform = `translateX(-${indiceCarrusel * 100}%)`;
}

// Chatbot functionality (existing code remains the same)
let chatAbierto = false;
let contadorMensajes = 0;
let escribiendo = false;
let conversacionActual = [];

// Base de conocimiento expandida y mejorada
const baseConocimiento = [
  // Preadolescencia
  { 
    claves: ["qu√© es la preadolescencia", "preadolescencia", "9 a√±os", "10 a√±os", "11 a√±os", "12 a√±os", "13 a√±os"], 
    respuesta: "üßí La preadolescencia va de los 9 a los 13 a√±os. Es cuando empiezan los primeros cambios f√≠sicos y emocionales, pero todav√≠a conservas parte de la ni√±ez. Es normal sentir curiosidad sobre tu cuerpo y querer encajar m√°s con tus amigos.",
    seguimiento: ["¬øTe preocupa alg√∫n cambio en particular?", "¬øHay algo espec√≠fico que te genera dudas?"]
  },
  { 
    claves: ["cambios preadolescencia", "cambios f√≠sicos", "cuerpo cambia"], 
    respuesta: "üå± En la preadolescencia pueden aparecer: crecimiento en altura, cambios en la voz, aparici√≥n de vello corporal y desarrollo de caracter√≠sticas sexuales. ¬°Cada persona tiene su propio ritmo de crecimiento!",
    seguimiento: ["¬øTe sientes c√≥modo/a hablando sobre estos cambios?"]
  },
  { 
    claves: ["verg√ºenza cuerpo", "pena", "timidez preadolescencia"], 
    respuesta: "üòä Sentir verg√ºenza del cuerpo es s√∫per com√∫n en esta etapa. Muchos preadolescentes sienten lo mismo. Lo importante es hablar con alguien de confianza y recordar que cada cuerpo es diferente y especial.",
    seguimiento: ["¬øTienes a alguien con quien te sientes c√≥modo/a hablando?"]
  },

  // Adolescencia
  { 
    claves: ["qu√© es la adolescencia", "adolescencia", "teenager"], 
    respuesta: "üåü La adolescencia (13-21 a√±os) es cuando construyes tu identidad, experimentas cambios hormonales intensos y las amistades se vuelven s√∫per importantes. Es tu momento de descubrir qui√©n eres realmente.",
    seguimiento: ["¬øQu√© aspecto de la adolescencia te resulta m√°s desafiante?"]
  },
  { 
    claves: ["qui√©n soy", "identidad", "encontrarme"], 
    respuesta: "üîç '¬øQui√©n soy?' es LA pregunta de la adolescencia. Es totalmente normal sentirse confundido/a mientras descubres tus gustos, valores y metas. Este proceso lleva tiempo y cada persona va a su ritmo.",
    seguimiento: ["¬øQu√© cosas te hacen sentir m√°s como 't√∫ mismo/a'?"]
  },
  { 
    claves: ["independencia", "libertad", "autonom√≠a"], 
    respuesta: "üóΩ Querer independencia es s√∫per natural en la adolescencia. No significa que rechaces a tu familia, sino que est√°s aprendiendo a tomar tus propias decisiones. Es parte del crecimiento hacia ser adulto/a.",
    seguimiento: ["¬øEn qu√© √°reas sientes que necesitas m√°s autonom√≠a?"]
  },
  { 
    claves: ["me siento triste", "depresi√≥n", "confundido", "ansiedad"], 
    respuesta: "üíô Muchos adolescentes sienten tristeza, ansiedad o confusi√≥n. Tu cerebro a√∫n est√° desarroll√°ndose y las emociones se sienten m√°s intensas. No est√°s solo/a. Si persiste, hablar con un adulto de confianza puede ayudar mucho.",
    seguimiento: ["¬øHay algo espec√≠fico que te est√° causando estos sentimientos?", "¬øTienes a alguien con quien puedas hablar?"]
  },
  { 
    claves: ["amigos importantes", "relaciones", "encajar"], 
    respuesta: "üë• Los amigos se vuelven s√∫per importantes porque empiezas a buscar tu identidad fuera de la familia. Es normal querer encajar y valorar mucho la opini√≥n de tus pares. ¬°Es parte del desarrollo social!",
    seguimiento: ["¬øC√≥mo te llevas con tus amigos actualmente?"]
  },
  { 
    claves: ["autoestima", "inseguridad", "confianza"], 
    respuesta: "üí™ La autoestima puede ser como una monta√±a rusa en la adolescencia. Consejos que funcionan: rod√©ate de personas que te valoren, evita comparaciones constantes y celebra tus logros, por peque√±os que sean.",
    seguimiento: ["¬øQu√© actividades te hacen sentir m√°s seguro/a de ti mismo/a?"]
  },
  { 
    claves: ["padres no entienden", "familia conflicto", "peleas casa"], 
    respuesta: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Los conflictos familiares son normales en esta etapa. Tus padres tambi√©n est√°n aprendiendo a relacionarse con la nueva versi√≥n de ti. La comunicaci√≥n honesta, aunque cueste, suele ayudar mucho.",
    seguimiento: ["¬øHay algo espec√≠fico que te gustar√≠a que tus padres entendieran?"]
  },

  // Padres y adultos
  { 
    claves: ["mi hijo no me habla", "hijo distante", "cerrado"], 
    respuesta: "‚ù§Ô∏è Es muy com√∫n que los adolescentes se vuelvan m√°s reservados. No significa que no los quieran, sino que necesitan espacio para crecer. Lo importante es estar disponibles cuando quieran hablar, sin presionar.",
    seguimiento: ["¬øHas intentado preguntarle sobre sus intereses sin juzgar?"]
  },
  { 
    claves: ["hijo rebelde", "mal comportamiento", "actitud"], 
    respuesta: "üå± La 'rebeld√≠a' suele ser parte del proceso de construcci√≥n de identidad. Los adolescentes necesitan diferenciarse para crecer. Mantengan l√≠mites claros pero con amor y mucha paciencia.",
    seguimiento: ["¬øQu√© comportamientos espec√≠ficos te preocupan m√°s?"]
  },
  { 
    claves: ["comunicaci√≥n hijos", "hablar adolescente"], 
    respuesta: "üí¨ Para mejorar la comunicaci√≥n: escuchen sin juzgar, hagan preguntas abiertas, respeten sus opiniones (aunque no las compartan) y elijan buenos momentos para conversar, como durante actividades juntos.",
    seguimiento: ["¬øQu√© temas te gustar√≠a poder hablar m√°s abiertamente?"]
  },
  { 
    claves: ["poner l√≠mites", "reglas", "disciplina"], 
    respuesta: "üéØ Los l√≠mites son fundamentales, pero deben ser claros, justos y explicados. Los adolescentes necesitan estructura para sentirse seguros, aunque protesten. Combinen firmeza con mucha comprensi√≥n.",
    seguimiento: ["¬øEn qu√© √°reas sienten que necesitan l√≠mites m√°s claros?"]
  },
  { 
    claves: ["consejos para padres", "ser padre", "ayuda padres"], 
    respuesta: "ü§ù Consejos clave para padres: mant√©nganse disponibles emocionalmente, muestren inter√©s genuino en sus cosas, validen sus sentimientos, ofrezcan apoyo sin resolver todo por ellos, y recuerden que est√°n aprendiendo de sus errores.",
    seguimiento: ["¬øC√≥mo sueles mostrar apoyo a tu hijo/a actualmente?"]
  },

  // Emociones espec√≠ficas
  { 
    claves: ["me siento solo", "soledad", "nadie entiende"], 
    respuesta: "ü´Ç Sentirse solo/a es muy com√∫n en la adolescencia, incluso estando rodeado/a de gente. Es parte de descubrir tu identidad. Buscar actividades donde puedas conocer personas con intereses similares puede ayudar.",
    seguimiento: ["¬øQu√© actividades te gustan hacer?", "¬øHas pensado en unirte a alg√∫n grupo o club?"]
  },
  { 
    claves: ["enojado todo el tiempo", "ira", "furioso"], 
    respuesta: "üò§ Sentir enojo frecuente es normal en la adolescencia por los cambios hormonales. Lo importante es expresarlo de forma saludable: ejercicio, arte, m√∫sica, escribir, o hablar con alguien de confianza.",
    seguimiento: ["¬øQu√© cosas te ayudan a calmarte cuando est√°s enojado/a?"]
  },
  { 
    claves: ["miedo al futuro", "ansiedad futuro", "qu√© ser√° de m√≠"], 
    respuesta: "üéØ Es normal sentir miedo por el futuro. No tienes que tenerlo todo resuelto ahora. Conc√©ntrate en explorar tus intereses, desarrollar tus habilidades y recordar que est√° bien cambiar de opini√≥n sobre tus planes.",
    seguimiento: ["¬øQu√© te emociona del futuro, adem√°s de lo que te preocupa?"]
  },

  // Temas espec√≠ficos
  { 
    claves: ["redes sociales", "instagram", "tiktok", "bullying online"], 
    respuesta: "üì± Las redes sociales pueden ser geniales para conectar, pero tambi√©n pueden causar ansiedad. Consejos: limita el tiempo de uso, no te compares con lo que ves online, bloquea contenido negativo y habla con adultos si algo te molesta.",
    seguimiento: ["¬øC√≥mo te hacen sentir las redes sociales generalmente?"]
  },
  { 
    claves: ["escuela estr√©s", "estudios dif√≠ciles", "presi√≥n acad√©mica"], 
    respuesta: "üìö La presi√≥n acad√©mica puede ser agobiante. Recuerda: organiza tu tiempo, pide ayuda cuando la necesites, toma descansos regulares y recuerda que las notas no definen tu valor como persona.",
    seguimiento: ["¬øEn qu√© materias o aspectos escolares necesitas m√°s apoyo?"]
  },
  { 
    claves: ["primer amor", "enamorado", "relaciones"], 
    respuesta: "üíï Los primeros sentimientos rom√°nticos son intensos y normales. Es importante ir despacio, comunicarte honestamente, respetar l√≠mites (tuyos y de la otra persona) y recordar que est√° bien si las cosas no funcionan.",
    seguimiento: ["¬øTe sientes c√≥modo/a hablando sobre relaciones con alguien de confianza?"]
  }
];

// Respuestas de seguimiento m√°s naturales
const respuestasSeguimiento = [
  "üí≠ ¬øHay algo m√°s espec√≠fico sobre esto que te gustar√≠a saber?",
  "ü§î ¬øC√≥mo te sientes despu√©s de leer esto?",
  "‚ú® ¬øTe gustar√≠a que hablemos de alg√∫n otro aspecto?",
  "üåü ¬øHay alguna situaci√≥n particular en la que esto se aplique a tu vida?",
  "üí¨ ¬øQuieres contarme m√°s sobre tu experiencia con esto?"
];

function abrirChat() {
  const widget = document.getElementById('chat-widget');
  const badge = document.getElementById('notification-badge');
  
  if (!chatAbierto) {
    widget.classList.remove('hidden');
    chatAbierto = true;
    badge.classList.add('hidden');
    
    // Si es la primera vez, mostrar mensaje de bienvenida mejorado
    if (contadorMensajes === 0) {
      setTimeout(() => {
        mostrarMensajeBienvenida();
      }, 500);
    }
    
    setTimeout(() => {
      const chatInput = document.getElementById('chat-input');
      if (chatInput) chatInput.focus();
    }, 600);
  } else {
    cerrarChat();
  }
}

function cerrarChat() {
  const widget = document.getElementById('chat-widget');
  if (widget) {
    widget.classList.add('hidden');
    chatAbierto = false;
  }
}

function minimizarChat() {
  cerrarChat();
  setTimeout(() => {
    const badge = document.getElementById('notification-badge');
    if (badge) badge.classList.remove('hidden');
  }, 300);
}

function mostrarMensajeBienvenida() {
  if (contadorMensajes === 0) {
    const mensajesExtra = [
      "üåü Puedes preguntarme sobre cambios f√≠sicos y emocionales en la preadolescencia y adolescencia.",
      "üí° Tambi√©n tengo consejos para padres que quieren entender mejor a sus hijos adolescentes.",
      "üí¨ ¬°No dudes en escribirme cualquier duda que tengas! Estoy aqu√≠ para ayudarte."
    ];
    
    mensajesExtra.forEach((mensaje, index) => {
      setTimeout(() => {
        agregarMensaje(mensaje, 'bot');
      }, (index + 1) * 1000);
    });
  }
}

function enviarPreguntaRapida(pregunta) {
  const chatInput = document.getElementById('chat-input');
  if (chatInput) {
    chatInput.value = pregunta;
    enviarMensaje();
  }
}

function enviarMensaje() {
  const input = document.getElementById('chat-input');
  if (!input) return;
  
  const mensaje = input.value.trim();
  
  if (mensaje === '') return;
  
  agregarMensaje(mensaje, 'user');
  input.value = '';
  actualizarContador(0);
  
  // Ocultar respuestas r√°pidas despu√©s del primer mensaje del usuario
  if (contadorMensajes === 1) {
    const quickReplies = document.getElementById('quick-replies');
    if (quickReplies) quickReplies.style.display = 'none';
  }
  
  mostrarIndicadorEscritura();
  
  // Simular delay de respuesta m√°s realista
  setTimeout(() => {
    const respuesta = generarRespuesta(mensaje);
    ocultarIndicadorEscritura();
    agregarMensaje(respuesta.respuesta, 'bot');
    
    // Agregar pregunta de seguimiento si existe
    if (respuesta.seguimiento) {
      setTimeout(() => {
        const preguntaSeguimiento = respuesta.seguimiento[Math.floor(Math.random() * respuesta.seguimiento.length)];
        agregarMensaje(preguntaSeguimiento, 'bot', true);
      }, 1500);
    }
  }, 1800 + Math.random() * 1200);
}

function agregarMensaje(contenido, remitente, esSeguimiento = false) {
  const chatBody = document.getElementById('chat-body');
  if (!chatBody) return;
  
  const contenedorMensaje = document.createElement('div');
  contenedorMensaje.className = `message-container ${remitente}-message`;
  
  const avatar = document.createElement('div');
  avatar.className = 'message-avatar';
  avatar.innerHTML = remitente === 'bot' ? '<i class="fas fa-robot"></i>' : '<i class="fas fa-user"></i>';
  
  const contenidoMensaje = document.createElement('div');
  contenidoMensaje.className = 'message-content';
  
  const burbuja = document.createElement('div');
  burbuja.className = `message-bubble ${esSeguimiento ? 'follow-up-message' : ''}`;
  burbuja.textContent = contenido;
  
  const tiempo = document.createElement('div');
  tiempo.className = 'message-time';
  tiempo.textContent = obtenerTiempoActual();
  
  contenidoMensaje.appendChild(burbuja);
  contenidoMensaje.appendChild(tiempo);
  
  contenedorMensaje.appendChild(avatar);
  contenedorMensaje.appendChild(contenidoMensaje);
  
  chatBody.appendChild(contenedorMensaje);
  chatBody.scrollTop = chatBody.scrollHeight;
  
  if (remitente === 'user') {
    contadorMensajes++;
    conversacionActual.push({ tipo: 'user', contenido: contenido, tiempo: new Date() });
  } else {
    conversacionActual.push({ tipo: 'bot', contenido: contenido, tiempo: new Date() });
  }
}

function generarRespuesta(mensaje) {
  const mensajeLower = mensaje.toLowerCase();
  
  // Buscar coincidencias en la base de conocimiento
  for (let item of baseConocimiento) {
    if (item.claves.some(clave => mensajeLower.includes(clave))) {
      return {
        respuesta: item.respuesta,
        seguimiento: item.seguimiento
      };
    }
  }
  
  // Respuestas para saludos
  if (mensajeLower.includes('hola') || mensajeLower.includes('buenos') || mensajeLower.includes('buenas')) {
    return {
      respuesta: "¬°Hola! üòä Me alegra que est√©s aqu√≠. Soy CAdo Assistant y estoy para ayudarte con cualquier duda sobre preadolescencia, adolescencia o consejos para padres. ¬øEn qu√© puedo ayudarte hoy?",
      seguimiento: ["¬øHay algo espec√≠fico que te est√© preocupando?"]
    };
  }
  
  // Respuestas para agradecimientos
  if (mensajeLower.includes('gracias') || mensajeLower.includes('thank')) {
    return {
      respuesta: "¬°De nada! üòä Me alegra poder ayudarte. Recuerda que siempre puedes volver a preguntarme lo que necesites. ¬øHay algo m√°s en lo que pueda ayudarte?",
      seguimiento: null
    };
  }
  
  // Respuesta por defecto m√°s √∫til
  return {
    respuesta: "ü§î No tengo una respuesta espec√≠fica para eso, pero me interesa ayudarte. Puedes preguntarme sobre:\n\n‚Ä¢ Cambios en la preadolescencia (9-13 a√±os)\n‚Ä¢ Desaf√≠os de la adolescencia (13-21 a√±os)\n‚Ä¢ Consejos para padres\n‚Ä¢ Manejo de emociones\n‚Ä¢ Relaciones familiares y sociales\n\n¬øAlguno de estos temas te interesa?",
    seguimiento: null
  };
}

function mostrarIndicadorEscritura() {
  escribiendo = true;
  const indicador = document.getElementById('typing-indicator');
  if (indicador) {
    indicador.classList.remove('hidden');
    
    const chatBody = document.getElementById('chat-body');
    if (chatBody) chatBody.scrollTop = chatBody.scrollHeight;
  }
}

function ocultarIndicadorEscritura() {
  escribiendo = false;
  const indicador = document.getElementById('typing-indicator');
  if (indicador) {
    indicador.classList.add('hidden');
  }
}

function obtenerTiempoActual() {
  const ahora = new Date();
  return ahora.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });
}

function manejarEnter(event) {
  if (event.key === 'Enter' && !event.shiftKey) {
    event.preventDefault();
    enviarMensaje();
  }
}

// Funciones para emojis
function toggleEmojiPicker() {
  const picker = document.getElementById('emoji-picker');
  if (picker) {
    picker.classList.toggle('hidden');
  }
}

function insertarEmoji(emoji) {
  const input = document.getElementById('chat-input');
  if (!input) return;
  
  const posicion = input.selectionStart;
  const valorActual = input.value;
  const nuevoValor = valorActual.substring(0, posicion) + emoji + valorActual.substring(posicion);
  
  input.value = nuevoValor;
  input.focus();
  input.setSelectionRange(posicion + emoji.length, posicion + emoji.length);
  
  actualizarContador(nuevoValor.length);
  const picker = document.getElementById('emoji-picker');
  if (picker) picker.classList.add('hidden');
}

// Contador de caracteres
function actualizarContador(longitud) {
  const contador = document.getElementById('char-counter');
  if (!contador) return;
  
  const restantes = 300 - longitud;
  contador.textContent = restantes;
  
  contador.className = 'char-counter';
  if (restantes < 50) contador.classList.add('warning');
  if (restantes < 20) contador.classList.add('danger');
}

// Event listeners adicionales
document.addEventListener('DOMContentLoaded', function() {
  // Contador de caracteres en el input del chat
  const chatInput = document.getElementById('chat-input');
  if (chatInput) {
    chatInput.addEventListener('input', function(e) {
      actualizarContador(e.target.value.length);
    });
  }

  // Cerrar emoji picker al hacer click fuera
  document.addEventListener('click', function(e) {
    const picker = document.getElementById('emoji-picker');
    const emojiBtn = document.querySelector('.emoji-btn');
    
    if (picker && emojiBtn && !picker.contains(e.target) && !emojiBtn.contains(e.target)) {
      picker.classList.add('hidden');
    }
  });

  // Mostrar notificaci√≥n despu√©s de unos segundos si no se ha abierto el chat
  setTimeout(() => {
    if (!chatAbierto) {
      const badge = document.getElementById('notification-badge');
      if (badge) badge.classList.remove('hidden');
    }
  }, 10000);
});
// === Contadores animados en Somos CAdo ===
document.addEventListener("DOMContentLoaded", () => {
  const contadores = document.querySelectorAll(".contador");
  const speed = 40;

  const animarContador = (contador) => {
    const target = +contador.getAttribute("data-target");
    const valor = +contador.innerText;
    const incremento = Math.ceil(target / 100);

    if (valor < target) {
      contador.innerText = valor + incremento;
      setTimeout(() => animarContador(contador), speed);
    } else {
      contador.innerText = target;
    }
  };

  const observar = new IntersectionObserver((entradas, observer) => {
    entradas.forEach(entrada => {
      if (entrada.isIntersecting) {
        animarContador(entrada.target);
        observer.unobserve(entrada.target);
      }
    });
  }, { threshold: 0.6 });

  contadores.forEach(contador => observar.observe(contador));
});
// Carrusel Mejorado
const slides = document.querySelectorAll('.carousel img');
const prev = document.querySelector('.carousel .prev');
const next = document.querySelector('.carousel .next');
const indicators = document.querySelectorAll('.carousel-indicators span');

let currentIndex = 0;
let interval;

function showSlide(index) {
  slides.forEach((slide, i) => {
    slide.classList.remove('active');
    indicators[i].classList.remove('active');
    if (i === index) {
      slide.classList.add('active');
      indicators[i].classList.add('active');
    }
  });
  currentIndex = index;
}

function nextSlide() {
  let newIndex = (currentIndex + 1) % slides.length;
  showSlide(newIndex);
}

function prevSlide() {
  let newIndex = (currentIndex - 1 + slides.length) % slides.length;
  showSlide(newIndex);
}

// Auto play
function startCarousel() {
  interval = setInterval(nextSlide, 4000);
}

function stopCarousel() {
  clearInterval(interval);
}

// Eventos
next.addEventListener('click', () => { nextSlide(); stopCarousel(); startCarousel(); });
prev.addEventListener('click', () => { prevSlide(); stopCarousel(); startCarousel(); });
indicators.forEach((dot, i) => {
  dot.addEventListener('click', () => {
    showSlide(i);
    stopCarousel();
    startCarousel();
  });
});

document.querySelector('.carousel').addEventListener('mouseenter', stopCarousel);
document.querySelector('.carousel').addEventListener('mouseleave', startCarousel);

// Inicializar
showSlide(currentIndex);
startCarousel();
